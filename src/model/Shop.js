/**
 * SellAuth
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Theme from './Theme';

/**
 * The Shop model module.
 * @module model/Shop
 * @version 1.0.0
 */
class Shop {
    /**
     * Constructs a new <code>Shop</code>.
     * @alias module:model/Shop
     */
    constructor() { 
        
        Shop.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Shop</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Shop} obj Optional instance to populate.
     * @return {module:model/Shop} The populated <code>Shop</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Shop();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('subdomain')) {
                obj['subdomain'] = ApiClient.convertToType(data['subdomain'], 'String');
            }
            if (data.hasOwnProperty('logo_image_id')) {
                obj['logo_image_id'] = ApiClient.convertToType(data['logo_image_id'], 'Number');
            }
            if (data.hasOwnProperty('favicon_image_id')) {
                obj['favicon_image_id'] = ApiClient.convertToType(data['favicon_image_id'], 'Number');
            }
            if (data.hasOwnProperty('background_image_id')) {
                obj['background_image_id'] = ApiClient.convertToType(data['background_image_id'], 'Number');
            }
            if (data.hasOwnProperty('image_url')) {
                obj['image_url'] = ApiClient.convertToType(data['image_url'], 'String');
            }
            if (data.hasOwnProperty('background_image_url')) {
                obj['background_image_url'] = ApiClient.convertToType(data['background_image_url'], 'String');
            }
            if (data.hasOwnProperty('bitcoin_address')) {
                obj['bitcoin_address'] = ApiClient.convertToType(data['bitcoin_address'], 'String');
            }
            if (data.hasOwnProperty('bitcoin_wallet')) {
                obj['bitcoin_wallet'] = ApiClient.convertToType(data['bitcoin_wallet'], 'String');
            }
            if (data.hasOwnProperty('litecoin_address')) {
                obj['litecoin_address'] = ApiClient.convertToType(data['litecoin_address'], 'String');
            }
            if (data.hasOwnProperty('litecoin_wallet')) {
                obj['litecoin_wallet'] = ApiClient.convertToType(data['litecoin_wallet'], 'String');
            }
            if (data.hasOwnProperty('paypal_email')) {
                obj['paypal_email'] = ApiClient.convertToType(data['paypal_email'], 'String');
            }
            if (data.hasOwnProperty('paypal_method')) {
                obj['paypal_method'] = ApiClient.convertToType(data['paypal_method'], 'String');
            }
            if (data.hasOwnProperty('paypal_client_id')) {
                obj['paypal_client_id'] = ApiClient.convertToType(data['paypal_client_id'], 'String');
            }
            if (data.hasOwnProperty('paypal_client_secret')) {
                obj['paypal_client_secret'] = ApiClient.convertToType(data['paypal_client_secret'], 'String');
            }
            if (data.hasOwnProperty('paypal_webhook_id')) {
                obj['paypal_webhook_id'] = ApiClient.convertToType(data['paypal_webhook_id'], 'String');
            }
            if (data.hasOwnProperty('paypalff_method')) {
                obj['paypalff_method'] = ApiClient.convertToType(data['paypalff_method'], 'String');
            }
            if (data.hasOwnProperty('stripe_api_key')) {
                obj['stripe_api_key'] = ApiClient.convertToType(data['stripe_api_key'], 'String');
            }
            if (data.hasOwnProperty('stripe_webhook_secret')) {
                obj['stripe_webhook_secret'] = ApiClient.convertToType(data['stripe_webhook_secret'], 'String');
            }
            if (data.hasOwnProperty('owner_id')) {
                obj['owner_id'] = ApiClient.convertToType(data['owner_id'], 'Number');
            }
            if (data.hasOwnProperty('cashapp_cashtag')) {
                obj['cashapp_cashtag'] = ApiClient.convertToType(data['cashapp_cashtag'], 'String');
            }
            if (data.hasOwnProperty('cashapp_email')) {
                obj['cashapp_email'] = ApiClient.convertToType(data['cashapp_email'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('valid_payment_methods')) {
                obj['valid_payment_methods'] = ApiClient.convertToType(data['valid_payment_methods'], ['String']);
            }
            if (data.hasOwnProperty('theme')) {
                obj['theme'] = Theme.constructFromObject(data['theme']);
            }
            if (data.hasOwnProperty('is_subscribed')) {
                obj['is_subscribed'] = ApiClient.convertToType(data['is_subscribed'], 'Boolean');
            }
            if (data.hasOwnProperty('subscription_end_time')) {
                obj['subscription_end_time'] = ApiClient.convertToType(data['subscription_end_time'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Shop</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Shop</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['subdomain'] && !(typeof data['subdomain'] === 'string' || data['subdomain'] instanceof String)) {
            throw new Error("Expected the field `subdomain` to be a primitive type in the JSON string but got " + data['subdomain']);
        }
        // ensure the json data is a string
        if (data['image_url'] && !(typeof data['image_url'] === 'string' || data['image_url'] instanceof String)) {
            throw new Error("Expected the field `image_url` to be a primitive type in the JSON string but got " + data['image_url']);
        }
        // ensure the json data is a string
        if (data['background_image_url'] && !(typeof data['background_image_url'] === 'string' || data['background_image_url'] instanceof String)) {
            throw new Error("Expected the field `background_image_url` to be a primitive type in the JSON string but got " + data['background_image_url']);
        }
        // ensure the json data is a string
        if (data['bitcoin_address'] && !(typeof data['bitcoin_address'] === 'string' || data['bitcoin_address'] instanceof String)) {
            throw new Error("Expected the field `bitcoin_address` to be a primitive type in the JSON string but got " + data['bitcoin_address']);
        }
        // ensure the json data is a string
        if (data['bitcoin_wallet'] && !(typeof data['bitcoin_wallet'] === 'string' || data['bitcoin_wallet'] instanceof String)) {
            throw new Error("Expected the field `bitcoin_wallet` to be a primitive type in the JSON string but got " + data['bitcoin_wallet']);
        }
        // ensure the json data is a string
        if (data['litecoin_address'] && !(typeof data['litecoin_address'] === 'string' || data['litecoin_address'] instanceof String)) {
            throw new Error("Expected the field `litecoin_address` to be a primitive type in the JSON string but got " + data['litecoin_address']);
        }
        // ensure the json data is a string
        if (data['litecoin_wallet'] && !(typeof data['litecoin_wallet'] === 'string' || data['litecoin_wallet'] instanceof String)) {
            throw new Error("Expected the field `litecoin_wallet` to be a primitive type in the JSON string but got " + data['litecoin_wallet']);
        }
        // ensure the json data is a string
        if (data['paypal_email'] && !(typeof data['paypal_email'] === 'string' || data['paypal_email'] instanceof String)) {
            throw new Error("Expected the field `paypal_email` to be a primitive type in the JSON string but got " + data['paypal_email']);
        }
        // ensure the json data is a string
        if (data['paypal_method'] && !(typeof data['paypal_method'] === 'string' || data['paypal_method'] instanceof String)) {
            throw new Error("Expected the field `paypal_method` to be a primitive type in the JSON string but got " + data['paypal_method']);
        }
        // ensure the json data is a string
        if (data['paypal_client_id'] && !(typeof data['paypal_client_id'] === 'string' || data['paypal_client_id'] instanceof String)) {
            throw new Error("Expected the field `paypal_client_id` to be a primitive type in the JSON string but got " + data['paypal_client_id']);
        }
        // ensure the json data is a string
        if (data['paypal_client_secret'] && !(typeof data['paypal_client_secret'] === 'string' || data['paypal_client_secret'] instanceof String)) {
            throw new Error("Expected the field `paypal_client_secret` to be a primitive type in the JSON string but got " + data['paypal_client_secret']);
        }
        // ensure the json data is a string
        if (data['paypal_webhook_id'] && !(typeof data['paypal_webhook_id'] === 'string' || data['paypal_webhook_id'] instanceof String)) {
            throw new Error("Expected the field `paypal_webhook_id` to be a primitive type in the JSON string but got " + data['paypal_webhook_id']);
        }
        // ensure the json data is a string
        if (data['paypalff_method'] && !(typeof data['paypalff_method'] === 'string' || data['paypalff_method'] instanceof String)) {
            throw new Error("Expected the field `paypalff_method` to be a primitive type in the JSON string but got " + data['paypalff_method']);
        }
        // ensure the json data is a string
        if (data['stripe_api_key'] && !(typeof data['stripe_api_key'] === 'string' || data['stripe_api_key'] instanceof String)) {
            throw new Error("Expected the field `stripe_api_key` to be a primitive type in the JSON string but got " + data['stripe_api_key']);
        }
        // ensure the json data is a string
        if (data['stripe_webhook_secret'] && !(typeof data['stripe_webhook_secret'] === 'string' || data['stripe_webhook_secret'] instanceof String)) {
            throw new Error("Expected the field `stripe_webhook_secret` to be a primitive type in the JSON string but got " + data['stripe_webhook_secret']);
        }
        // ensure the json data is a string
        if (data['cashapp_cashtag'] && !(typeof data['cashapp_cashtag'] === 'string' || data['cashapp_cashtag'] instanceof String)) {
            throw new Error("Expected the field `cashapp_cashtag` to be a primitive type in the JSON string but got " + data['cashapp_cashtag']);
        }
        // ensure the json data is a string
        if (data['cashapp_email'] && !(typeof data['cashapp_email'] === 'string' || data['cashapp_email'] instanceof String)) {
            throw new Error("Expected the field `cashapp_email` to be a primitive type in the JSON string but got " + data['cashapp_email']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['valid_payment_methods'])) {
            throw new Error("Expected the field `valid_payment_methods` to be an array in the JSON data but got " + data['valid_payment_methods']);
        }
        // validate the optional field `theme`
        if (data['theme']) { // data not null
          Theme.validateJSON(data['theme']);
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
Shop.prototype['id'] = undefined;

/**
 * @member {Date} created_at
 */
Shop.prototype['created_at'] = undefined;

/**
 * @member {Date} updated_at
 */
Shop.prototype['updated_at'] = undefined;

/**
 * @member {String} name
 */
Shop.prototype['name'] = undefined;

/**
 * @member {String} subdomain
 */
Shop.prototype['subdomain'] = undefined;

/**
 * @member {Number} logo_image_id
 */
Shop.prototype['logo_image_id'] = undefined;

/**
 * @member {Number} favicon_image_id
 */
Shop.prototype['favicon_image_id'] = undefined;

/**
 * @member {Number} background_image_id
 */
Shop.prototype['background_image_id'] = undefined;

/**
 * @member {String} image_url
 */
Shop.prototype['image_url'] = undefined;

/**
 * @member {String} background_image_url
 */
Shop.prototype['background_image_url'] = undefined;

/**
 * @member {String} bitcoin_address
 */
Shop.prototype['bitcoin_address'] = undefined;

/**
 * @member {String} bitcoin_wallet
 */
Shop.prototype['bitcoin_wallet'] = undefined;

/**
 * @member {String} litecoin_address
 */
Shop.prototype['litecoin_address'] = undefined;

/**
 * @member {String} litecoin_wallet
 */
Shop.prototype['litecoin_wallet'] = undefined;

/**
 * @member {String} paypal_email
 */
Shop.prototype['paypal_email'] = undefined;

/**
 * @member {String} paypal_method
 */
Shop.prototype['paypal_method'] = undefined;

/**
 * @member {String} paypal_client_id
 */
Shop.prototype['paypal_client_id'] = undefined;

/**
 * @member {String} paypal_client_secret
 */
Shop.prototype['paypal_client_secret'] = undefined;

/**
 * @member {String} paypal_webhook_id
 */
Shop.prototype['paypal_webhook_id'] = undefined;

/**
 * @member {String} paypalff_method
 */
Shop.prototype['paypalff_method'] = undefined;

/**
 * @member {String} stripe_api_key
 */
Shop.prototype['stripe_api_key'] = undefined;

/**
 * @member {String} stripe_webhook_secret
 */
Shop.prototype['stripe_webhook_secret'] = undefined;

/**
 * @member {Number} owner_id
 */
Shop.prototype['owner_id'] = undefined;

/**
 * @member {String} cashapp_cashtag
 */
Shop.prototype['cashapp_cashtag'] = undefined;

/**
 * @member {String} cashapp_email
 */
Shop.prototype['cashapp_email'] = undefined;

/**
 * @member {String} description
 */
Shop.prototype['description'] = undefined;

/**
 * @member {Array.<String>} valid_payment_methods
 */
Shop.prototype['valid_payment_methods'] = undefined;

/**
 * @member {module:model/Theme} theme
 */
Shop.prototype['theme'] = undefined;

/**
 * @member {Boolean} is_subscribed
 */
Shop.prototype['is_subscribed'] = undefined;

/**
 * @member {Date} subscription_end_time
 */
Shop.prototype['subscription_end_time'] = undefined;






export default Shop;

