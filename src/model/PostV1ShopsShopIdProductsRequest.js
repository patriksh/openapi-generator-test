/**
 * SellAuth
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostV1ShopsShopIdProductsRequest model module.
 * @module model/PostV1ShopsShopIdProductsRequest
 * @version 1.0.0
 */
class PostV1ShopsShopIdProductsRequest {
    /**
     * Constructs a new <code>PostV1ShopsShopIdProductsRequest</code>.
     * @alias module:model/PostV1ShopsShopIdProductsRequest
     * @param name {String} 
     * @param description {String} 
     * @param currency {String} 
     * @param type {module:model/PostV1ShopsShopIdProductsRequest.TypeEnum} 
     * @param visibility {module:model/PostV1ShopsShopIdProductsRequest.VisibilityEnum} 
     */
    constructor(name, description, currency, type, visibility) { 
        
        PostV1ShopsShopIdProductsRequest.initialize(this, name, description, currency, type, visibility);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, description, currency, type, visibility) { 
        obj['name'] = name;
        obj['description'] = description;
        obj['currency'] = currency;
        obj['type'] = type;
        obj['visibility'] = visibility;
    }

    /**
     * Constructs a <code>PostV1ShopsShopIdProductsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostV1ShopsShopIdProductsRequest} obj Optional instance to populate.
     * @return {module:model/PostV1ShopsShopIdProductsRequest} The populated <code>PostV1ShopsShopIdProductsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostV1ShopsShopIdProductsRequest();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('instructions')) {
                obj['instructions'] = ApiClient.convertToType(data['instructions'], 'String');
            }
            if (data.hasOwnProperty('out_of_stock_message')) {
                obj['out_of_stock_message'] = ApiClient.convertToType(data['out_of_stock_message'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('deliverables')) {
                obj['deliverables'] = ApiClient.convertToType(data['deliverables'], 'String');
            }
            if (data.hasOwnProperty('deliverables_type')) {
                obj['deliverables_type'] = ApiClient.convertToType(data['deliverables_type'], 'String');
            }
            if (data.hasOwnProperty('stock')) {
                obj['stock'] = ApiClient.convertToType(data['stock'], 'Number');
            }
            if (data.hasOwnProperty('group_id')) {
                obj['group_id'] = ApiClient.convertToType(data['group_id'], 'String');
            }
            if (data.hasOwnProperty('image_ids')) {
                obj['image_ids'] = ApiClient.convertToType(data['image_ids'], ['String']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('visibility')) {
                obj['visibility'] = ApiClient.convertToType(data['visibility'], 'String');
            }
            if (data.hasOwnProperty('payment_methods')) {
                obj['payment_methods'] = ApiClient.convertToType(data['payment_methods'], Object);
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'String');
            }
            if (data.hasOwnProperty('quantity_min')) {
                obj['quantity_min'] = ApiClient.convertToType(data['quantity_min'], 'Number');
            }
            if (data.hasOwnProperty('quantity_max')) {
                obj['quantity_max'] = ApiClient.convertToType(data['quantity_max'], 'Number');
            }
            if (data.hasOwnProperty('volume_discounts')) {
                obj['volume_discounts'] = ApiClient.convertToType(data['volume_discounts'], ['String']);
            }
            if (data.hasOwnProperty('discord_guild_id')) {
                obj['discord_guild_id'] = ApiClient.convertToType(data['discord_guild_id'], 'String');
            }
            if (data.hasOwnProperty('discord_role_id')) {
                obj['discord_role_id'] = ApiClient.convertToType(data['discord_role_id'], 'String');
            }
            if (data.hasOwnProperty('block_vpn')) {
                obj['block_vpn'] = ApiClient.convertToType(data['block_vpn'], 'Boolean');
            }
            if (data.hasOwnProperty('custom_field_ids')) {
                obj['custom_field_ids'] = ApiClient.convertToType(data['custom_field_ids'], ['String']);
            }
            if (data.hasOwnProperty('variants')) {
                obj['variants'] = ApiClient.convertToType(data['variants'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostV1ShopsShopIdProductsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostV1ShopsShopIdProductsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PostV1ShopsShopIdProductsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['instructions'] && !(typeof data['instructions'] === 'string' || data['instructions'] instanceof String)) {
            throw new Error("Expected the field `instructions` to be a primitive type in the JSON string but got " + data['instructions']);
        }
        // ensure the json data is a string
        if (data['out_of_stock_message'] && !(typeof data['out_of_stock_message'] === 'string' || data['out_of_stock_message'] instanceof String)) {
            throw new Error("Expected the field `out_of_stock_message` to be a primitive type in the JSON string but got " + data['out_of_stock_message']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // ensure the json data is a string
        if (data['deliverables'] && !(typeof data['deliverables'] === 'string' || data['deliverables'] instanceof String)) {
            throw new Error("Expected the field `deliverables` to be a primitive type in the JSON string but got " + data['deliverables']);
        }
        // ensure the json data is a string
        if (data['deliverables_type'] && !(typeof data['deliverables_type'] === 'string' || data['deliverables_type'] instanceof String)) {
            throw new Error("Expected the field `deliverables_type` to be a primitive type in the JSON string but got " + data['deliverables_type']);
        }
        // ensure the json data is a string
        if (data['group_id'] && !(typeof data['group_id'] === 'string' || data['group_id'] instanceof String)) {
            throw new Error("Expected the field `group_id` to be a primitive type in the JSON string but got " + data['group_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['image_ids'])) {
            throw new Error("Expected the field `image_ids` to be an array in the JSON data but got " + data['image_ids']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['visibility'] && !(typeof data['visibility'] === 'string' || data['visibility'] instanceof String)) {
            throw new Error("Expected the field `visibility` to be a primitive type in the JSON string but got " + data['visibility']);
        }
        // ensure the json data is a string
        if (data['price'] && !(typeof data['price'] === 'string' || data['price'] instanceof String)) {
            throw new Error("Expected the field `price` to be a primitive type in the JSON string but got " + data['price']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['volume_discounts'])) {
            throw new Error("Expected the field `volume_discounts` to be an array in the JSON data but got " + data['volume_discounts']);
        }
        // ensure the json data is a string
        if (data['discord_guild_id'] && !(typeof data['discord_guild_id'] === 'string' || data['discord_guild_id'] instanceof String)) {
            throw new Error("Expected the field `discord_guild_id` to be a primitive type in the JSON string but got " + data['discord_guild_id']);
        }
        // ensure the json data is a string
        if (data['discord_role_id'] && !(typeof data['discord_role_id'] === 'string' || data['discord_role_id'] instanceof String)) {
            throw new Error("Expected the field `discord_role_id` to be a primitive type in the JSON string but got " + data['discord_role_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['custom_field_ids'])) {
            throw new Error("Expected the field `custom_field_ids` to be an array in the JSON data but got " + data['custom_field_ids']);
        }

        return true;
    }


}

PostV1ShopsShopIdProductsRequest.RequiredProperties = ["name", "description", "currency", "type", "visibility"];

/**
 * 
 * @member {String} name
 */
PostV1ShopsShopIdProductsRequest.prototype['name'] = undefined;

/**
 * 
 * @member {String} path
 */
PostV1ShopsShopIdProductsRequest.prototype['path'] = undefined;

/**
 * 
 * @member {String} description
 */
PostV1ShopsShopIdProductsRequest.prototype['description'] = undefined;

/**
 * 
 * @member {String} instructions
 */
PostV1ShopsShopIdProductsRequest.prototype['instructions'] = undefined;

/**
 * 
 * @member {String} out_of_stock_message
 */
PostV1ShopsShopIdProductsRequest.prototype['out_of_stock_message'] = undefined;

/**
 * 
 * @member {String} currency
 */
PostV1ShopsShopIdProductsRequest.prototype['currency'] = undefined;

/**
 * 
 * @member {String} deliverables
 */
PostV1ShopsShopIdProductsRequest.prototype['deliverables'] = undefined;

/**
 * 
 * @member {module:model/PostV1ShopsShopIdProductsRequest.DeliverablesTypeEnum} deliverables_type
 */
PostV1ShopsShopIdProductsRequest.prototype['deliverables_type'] = undefined;

/**
 * Must be at least -1.
 * @member {Number} stock
 */
PostV1ShopsShopIdProductsRequest.prototype['stock'] = undefined;

/**
 * 
 * @member {String} group_id
 */
PostV1ShopsShopIdProductsRequest.prototype['group_id'] = undefined;

/**
 * 
 * @member {Array.<String>} image_ids
 */
PostV1ShopsShopIdProductsRequest.prototype['image_ids'] = undefined;

/**
 * 
 * @member {module:model/PostV1ShopsShopIdProductsRequest.TypeEnum} type
 */
PostV1ShopsShopIdProductsRequest.prototype['type'] = undefined;

/**
 * 
 * @member {module:model/PostV1ShopsShopIdProductsRequest.VisibilityEnum} visibility
 */
PostV1ShopsShopIdProductsRequest.prototype['visibility'] = undefined;

/**
 * 
 * @member {Object} payment_methods
 */
PostV1ShopsShopIdProductsRequest.prototype['payment_methods'] = undefined;

/**
 * This field is required when <code>type</code> is <code>single</code>.
 * @member {String} price
 */
PostV1ShopsShopIdProductsRequest.prototype['price'] = undefined;

/**
 * Must be at least 1.
 * @member {Number} quantity_min
 */
PostV1ShopsShopIdProductsRequest.prototype['quantity_min'] = undefined;

/**
 * Must be at least 0.
 * @member {Number} quantity_max
 */
PostV1ShopsShopIdProductsRequest.prototype['quantity_max'] = undefined;

/**
 * 
 * @member {Array.<String>} volume_discounts
 */
PostV1ShopsShopIdProductsRequest.prototype['volume_discounts'] = undefined;

/**
 * 
 * @member {String} discord_guild_id
 */
PostV1ShopsShopIdProductsRequest.prototype['discord_guild_id'] = undefined;

/**
 * 
 * @member {String} discord_role_id
 */
PostV1ShopsShopIdProductsRequest.prototype['discord_role_id'] = undefined;

/**
 * 
 * @member {Boolean} block_vpn
 */
PostV1ShopsShopIdProductsRequest.prototype['block_vpn'] = undefined;

/**
 * 
 * @member {Array.<String>} custom_field_ids
 */
PostV1ShopsShopIdProductsRequest.prototype['custom_field_ids'] = undefined;

/**
 * This field is required when <code>type</code> is <code>variant</code>.  This field is required when <code>type</code> is <code>variant</code>.  This field is required when <code>type</code> is <code>variant</code>. Must have at least 1 items.
 * @member {Object} variants
 */
PostV1ShopsShopIdProductsRequest.prototype['variants'] = undefined;





/**
 * Allowed values for the <code>deliverables_type</code> property.
 * @enum {String}
 * @readonly
 */
PostV1ShopsShopIdProductsRequest['DeliverablesTypeEnum'] = {

    /**
     * value: "serials"
     * @const
     */
    "serials": "serials",

    /**
     * value: "service"
     * @const
     */
    "service": "service",

    /**
     * value: "dynamic"
     * @const
     */
    "dynamic": "dynamic"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
PostV1ShopsShopIdProductsRequest['TypeEnum'] = {

    /**
     * value: "single"
     * @const
     */
    "single": "single",

    /**
     * value: "variant"
     * @const
     */
    "variant": "variant"
};


/**
 * Allowed values for the <code>visibility</code> property.
 * @enum {String}
 * @readonly
 */
PostV1ShopsShopIdProductsRequest['VisibilityEnum'] = {

    /**
     * value: "public"
     * @const
     */
    "public": "public",

    /**
     * value: "unlisted"
     * @const
     */
    "unlisted": "unlisted",

    /**
     * value: "private"
     * @const
     */
    "private": "private",

    /**
     * value: "on_hold"
     * @const
     */
    "on_hold": "on_hold"
};



export default PostV1ShopsShopIdProductsRequest;

