/**
 * SellAuth
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellAuth);
  }
}(this, function(expect, SellAuth) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PutV1ShopsShopIdPaymentProcessorsUpdateRequest', function() {
    it('should create an instance of PutV1ShopsShopIdPaymentProcessorsUpdateRequest', function() {
      // uncomment below and update the code to test PutV1ShopsShopIdPaymentProcessorsUpdateRequest
      //var instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
      //expect(instance).to.be.a(SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest);
    });

    it('should have the property paypalEmail (base name: "paypal_email")', function() {
      // uncomment below and update the code to test the property paypalEmail
      //var instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
      //expect(instance).to.be();
    });

    it('should have the property paypalMethod (base name: "paypal_method")', function() {
      // uncomment below and update the code to test the property paypalMethod
      //var instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
      //expect(instance).to.be();
    });

    it('should have the property paypalClientId (base name: "paypal_client_id")', function() {
      // uncomment below and update the code to test the property paypalClientId
      //var instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
      //expect(instance).to.be();
    });

    it('should have the property paypalClientSecret (base name: "paypal_client_secret")', function() {
      // uncomment below and update the code to test the property paypalClientSecret
      //var instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
      //expect(instance).to.be();
    });

    it('should have the property paypalffEmail (base name: "paypalff_email")', function() {
      // uncomment below and update the code to test the property paypalffEmail
      //var instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
      //expect(instance).to.be();
    });

    it('should have the property paypalffMethod (base name: "paypalff_method")', function() {
      // uncomment below and update the code to test the property paypalffMethod
      //var instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
      //expect(instance).to.be();
    });

    it('should have the property paypalffCurrency (base name: "paypalff_currency")', function() {
      // uncomment below and update the code to test the property paypalffCurrency
      //var instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
      //expect(instance).to.be();
    });

    it('should have the property stripeApiKey (base name: "stripe_api_key")', function() {
      // uncomment below and update the code to test the property stripeApiKey
      //var instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
      //expect(instance).to.be();
    });

    it('should have the property stripeWebhookSecret (base name: "stripe_webhook_secret")', function() {
      // uncomment below and update the code to test the property stripeWebhookSecret
      //var instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
      //expect(instance).to.be();
    });

    it('should have the property stripePaypal (base name: "stripe_paypal")', function() {
      // uncomment below and update the code to test the property stripePaypal
      //var instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
      //expect(instance).to.be();
    });

    it('should have the property squareApiKey (base name: "square_api_key")', function() {
      // uncomment below and update the code to test the property squareApiKey
      //var instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
      //expect(instance).to.be();
    });

    it('should have the property squareLocationId (base name: "square_location_id")', function() {
      // uncomment below and update the code to test the property squareLocationId
      //var instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
      //expect(instance).to.be();
    });

    it('should have the property bitcoinAddress (base name: "bitcoin_address")', function() {
      // uncomment below and update the code to test the property bitcoinAddress
      //var instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
      //expect(instance).to.be();
    });

    it('should have the property litecoinAddress (base name: "litecoin_address")', function() {
      // uncomment below and update the code to test the property litecoinAddress
      //var instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
      //expect(instance).to.be();
    });

    it('should have the property cashappCashtag (base name: "cashapp_cashtag")', function() {
      // uncomment below and update the code to test the property cashappCashtag
      //var instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
      //expect(instance).to.be();
    });

    it('should have the property cashappEmail (base name: "cashapp_email")', function() {
      // uncomment below and update the code to test the property cashappEmail
      //var instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
      //expect(instance).to.be();
    });

    it('should have the property venmoTag (base name: "venmo_tag")', function() {
      // uncomment below and update the code to test the property venmoTag
      //var instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
      //expect(instance).to.be();
    });

    it('should have the property venmoEmail (base name: "venmo_email")', function() {
      // uncomment below and update the code to test the property venmoEmail
      //var instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
      //expect(instance).to.be();
    });

    it('should have the property amazonpsMerchantIdentifier (base name: "amazonps_merchant_identifier")', function() {
      // uncomment below and update the code to test the property amazonpsMerchantIdentifier
      //var instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
      //expect(instance).to.be();
    });

    it('should have the property amazonpsAccessCode (base name: "amazonps_access_code")', function() {
      // uncomment below and update the code to test the property amazonpsAccessCode
      //var instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
      //expect(instance).to.be();
    });

    it('should have the property amazonpsShaRequestPhrase (base name: "amazonps_sha_request_phrase")', function() {
      // uncomment below and update the code to test the property amazonpsShaRequestPhrase
      //var instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
      //expect(instance).to.be();
    });

    it('should have the property amazonpsShaResponsePhrase (base name: "amazonps_sha_response_phrase")', function() {
      // uncomment below and update the code to test the property amazonpsShaResponsePhrase
      //var instance = new SellAuth.PutV1ShopsShopIdPaymentProcessorsUpdateRequest();
      //expect(instance).to.be();
    });

  });

}));
